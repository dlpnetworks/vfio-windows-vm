#!/bin/bash

set -e

if [[ $EUID -ne 0 ]]
then
        echo "this script must be run as the super-user"
        exit 1
fi

# Rescan pci devices in case prior run failed
echo 1 > /sys/bus/pci/rescan

echo "Stopping bumblebee"
systemctl stop bumblebeed
sleep 0.1
        
echo "Unloading nvidia driver"
! modprobe -r nvidia_modeset
! modprobe -r nvidia

echo "Unloading nouveau"
! modprobe -r nouveau

sleep 1

# Trying to unbind the GPU results in general protection faults.
# Removing the binding ID from vfio-pci and then resetting the PCI device seems
# to work properly. It also auto-retaches to the nvidia module this way.
for dev in "0000:01:00.0" "0000:01:00.1"
do
    # Wait for device to wake up
    while [[ ! -e "/sys/bus/pci/devices/${dev}" ]]; do sleep 0.1; done

    if [[ ! -e "/sys/bus/pci/drivers/vfio-pci/${dev}" ]]; then
    	vendor=$(cat /sys/bus/pci/devices/${dev}/vendor)
	    device=$(cat /sys/bus/pci/devices/${dev}/device)

	    echo "Hot remove pci device at ${dev}"
    	echo 1 > /sys/bus/pci/devices/${dev}/remove
    	while [[ -e "/sys/bus/pci/devices/${dev}" ]]; do sleep 0.1; done

    	echo "Rescan pci bus to rediscover ${dev}"
	    echo 1 > /sys/bus/pci/rescan
	    while [[ ! -e "/sys/bus/pci/devices/${dev}" ]]; do sleep 0.1; done
        
        echo "Adding ${dev} (${vendor} ${device}) from vfio-pci id list"
        echo ${vendor} ${device} > /sys/bus/pci/drivers/vfio-pci/new_id
        sleep 1
    fi
	echo "pci device at ${dev} is bound to vfio-pci"
done

#echo "updating x11 monitor configuration"
#cp -v ./nvidia_10-monitor.conf /etc/X11/xorg.conf.d/10-monitor.conf

echo "done"
exit 0
